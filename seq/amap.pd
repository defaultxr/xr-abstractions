#N canvas 1920 30 2560 1566 10;
#X obj 478 368 list-idx;
#X obj 757 225 list length;
#X obj 523 349 %;
#X obj 478 349 l;
#X obj 406 126 inlet;
#X obj 444 298 t b f;
#X obj 478 436 outlet;
#X obj 736 164 inlet;
#X obj 469 164 t b a;
#X obj 730 206 t a a;
#X msg 500 183 reset;
#X text 105 156 amap - advanced map;
#X text 12 192 this behaves similarly to [map] \, except that the left inlet accepts many more messages that can do more complex things. some of the messages it accepts are:;
#X text 13 233 rand [low] [high] - output one item from the list whose index is between the (optional) low and high arguments.;
#X text 13 263 all - output the whole list in one message.;
#X text 13 283 drip - output each element in the list as its own message.;
#N canvas 0 0 800 849 rand 0;
#X obj 159 197 inlet;
#X obj 159 309 outlet;
#X obj 159 216 route bang float;
#X obj 159 290 rrange;
#X obj 159 245 f;
#X obj 264 228 value \$0-len;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 3 0;
#X connect 2 2 3 0;
#X connect 3 0 1 0;
#X connect 4 0 3 0;
#X connect 5 0 4 1;
#X restore 532 202 pd rand;
#X text 13 333 del <index> - delete an item from the list at the specified index.;
#X text 13 363 rem <item> - removes all instances of the specified item from the list.;
#X obj 406 145 route bang float list reset rand all drip ins del rem;
#N canvas 0 29 800 849 all 0;
#X obj 133 183 inlet;
#X obj 199 202 inlet;
#X obj 184 251 outlet;
#X obj 184 232 l;
#X obj 133 202 route bang;
#X connect 0 0 4 0;
#X connect 1 0 3 1;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X restore 563 221 pd all;
#N canvas 0 0 800 849 drip 0;
#X obj 435 342 inlet;
#X obj 450 406 value \$0-len;
#X obj 435 444 until;
#X obj 435 425 f;
#X obj 435 361 t b b;
#X obj 435 485 outlet;
#X msg 554 415 reset;
#X connect 0 0 4 0;
#X connect 1 0 3 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 4 1 6 0;
#X connect 6 0 5 0;
#X restore 595 192 pd drip;
#X obj 757 264 value \$0-len;
#N canvas 2480 29 800 871 ins 0;
#X obj 329 247 inlet;
#X obj 392 285 inlet;
#X obj 329 323 outlet;
#X obj 329 304 list-insert;
#X obj 329 266 list split 1;
#X connect 0 0 4 0;
#X connect 1 0 3 2;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 4 1 3 1;
#X restore 626 221 pd ins;
#N canvas 0 0 800 849 del 0;
#X obj 470 208 inlet;
#X obj 376 208 inlet;
#X obj 376 342 outlet;
#X obj 376 304 l;
#X obj 376 227 t b f;
#X obj 376 323 list-delete 0 1;
#X connect 0 0 3 1;
#X connect 1 0 4 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 4 1 5 1;
#X connect 5 0 2 0;
#X restore 658 192 pd del;
#X obj 689 326 print amap;
#X obj 689 286 bang;
#X msg 689 306 the 'rem' command is currently unimplemented.;
#X obj 478 387 route float;
#X obj 541 406 unsymbol;
#N canvas 0 29 800 849 list 0;
#X obj 137 -10 inlet;
#X obj 137 258 outlet;
#X obj 137 39 list;
#X obj 137 58 list-drip;
#X obj 137 77 route float;
#X msg 137 96 add2 \$1;
#N canvas 0 29 800 849 expand 0;
#X obj 37 18 inlet;
#X obj 37 56 s2l !;
#X obj 37 75 t a a;
#X obj 64 94 list length;
#X obj 37 117 prepent;
#X obj 37 136 route 1 2;
#X obj 37 434 outlet;
#X msg 37 415 add2 \$1;
#X obj 62 155 t a a;
#X msg 89 213 set \$1;
#X msg 62 313 60;
#X obj 89 194 list-idx 0;
#X obj 62 271 until;
#X obj 62 252 list-idx 1;
#X obj 37 355 route float;
#X obj 100 374 symbol;
#X obj 37 37 symbol;
#X obj 91 10 r foo;
#X connect 0 0 16 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 3 0;
#X connect 3 0 4 1;
#X connect 4 0 5 0;
#X connect 5 0 14 0;
#X connect 5 1 8 0;
#X connect 7 0 6 0;
#X connect 8 0 13 0;
#X connect 8 1 11 0;
#X connect 9 0 10 0;
#X connect 10 0 14 0;
#X connect 11 0 9 0;
#X connect 12 0 10 0;
#X connect 13 0 12 0;
#X connect 14 0 7 0;
#X connect 14 1 15 0;
#X connect 15 0 7 0;
#X connect 16 0 1 0;
#X connect 17 0 16 0;
#X restore 200 96 pd expand;
#X msg 137 239 list;
#X text 284 42 list pre-processor - converts pseudo-elements (i.e. symbols containing exclamation points) into real elements.;
#X obj 137 9 t a b;
#X msg 167 39 set list;
#X msg 188 213 bang \, set list;
#X connect 0 0 9 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 1 11 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 5 0 7 0;
#X connect 6 0 7 0;
#X connect 7 0 1 0;
#X connect 9 0 2 0;
#X connect 9 1 10 0;
#X connect 10 0 7 0;
#X connect 11 0 7 0;
#X restore 730 187 pd list;
#X text 14 418 you can also create multiple of an element by appending an exclamation point and then the number of that item. for example \, the list "1 2!3 3" expands to "1 2 2 2 3".;
#X obj 730 107 loadbang;
#X text 13 303 ins <item> <index> - insert an item into the list at the specified index.;
#X text 411 61 TODO: * make index optional for ins command. * fix ins so that an index of -1 will append to the list.;
#X obj 406 273 kount;
#X obj 730 145 pdcontrol;
#X msg 730 126 args;
#X connect 0 0 28 0;
#X connect 1 0 2 1;
#X connect 1 0 22 0;
#X connect 1 0 35 1;
#X connect 2 0 0 1;
#X connect 3 0 0 0;
#X connect 4 0 19 0;
#X connect 5 0 3 0;
#X connect 5 1 2 0;
#X connect 7 0 30 0;
#X connect 8 0 35 0;
#X connect 8 1 30 0;
#X connect 9 0 3 1;
#X connect 9 1 1 0;
#X connect 10 0 35 0;
#X connect 16 0 19 0;
#X connect 19 0 35 0;
#X connect 19 1 5 0;
#X connect 19 2 8 0;
#X connect 19 3 10 0;
#X connect 19 4 16 0;
#X connect 19 5 20 0;
#X connect 19 6 21 0;
#X connect 19 7 23 0;
#X connect 19 8 24 0;
#X connect 19 9 26 0;
#X connect 20 0 6 0;
#X connect 21 0 19 0;
#X connect 23 0 30 0;
#X connect 24 0 30 0;
#X connect 26 0 27 0;
#X connect 27 0 25 0;
#X connect 28 0 6 0;
#X connect 28 1 29 0;
#X connect 29 0 6 0;
#X connect 30 0 9 0;
#X connect 30 0 24 1;
#X connect 30 0 23 1;
#X connect 30 0 20 1;
#X connect 32 0 37 0;
#X connect 35 0 5 0;
#X connect 36 0 30 0;
#X connect 37 0 36 0;
