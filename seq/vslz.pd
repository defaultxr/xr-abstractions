#N canvas 0 29 960 1048 10;
#X obj 378 199 vsl 10 64 0 63 0 0 \$0-v0-s \$0-v0-r empty 0 -9 0 10 #14e814 #fcfcfc #000000 0 1;
#X obj 388 199 vsl 10 64 0 63 0 0 \$0-v1-s \$0-v1-r empty 0 -9 0 10 #14e814 #000000 #000000 0 1;
#X obj 398 199 vsl 10 64 0 63 0 0 \$0-v2-s \$0-v2-r empty 0 -9 0 10 #14e814 #000000 #000000 0 1;
#X obj 408 199 vsl 10 64 0 63 0 0 \$0-v3-s \$0-v3-r empty 0 -9 0 10 #14e814 #000000 #000000 0 1;
#X obj 418 199 vsl 10 64 0 63 0 0 \$0-v4-s \$0-v4-r empty 0 -9 0 10 #14e814 #000000 #000000 0 1;
#X obj 428 199 vsl 10 64 0 63 0 0 \$0-v5-s \$0-v5-r empty 0 -9 0 10 #14e814 #000000 #000000 0 1;
#X obj 438 199 vsl 10 64 0 63 0 0 \$0-v6-s \$0-v6-r empty 0 -9 0 10 #14e814 #000000 #000000 0 1;
#X obj 448 199 vsl 10 64 0 63 0 0 \$0-v7-s \$0-v7-r empty 0 -9 0 10 #14e814 #000000 #000000 0 1;
#X obj 135 219 outlet;
#X obj 135 128 inlet;
#X obj 135 148 route bang float list;
#N canvas 0 29 1920 1048 set 0;
#X obj 231 85 inlet;
#X obj 231 145 pack f f \$0;
#X msg 231 165 \; \$3-v\$1-r set \$2;
#X obj 361 178 tabwrite \$0-t;
#X obj 361 142 unpack f f;
#X msg 361 122 \$2 \$1;
#X connect 0 0 5 0;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 4 0 3 0;
#X connect 4 1 3 1;
#X connect 5 0 4 0;
#X restore 217 192 pd set;
#N canvas 0 1080 960 1048 receives 0;
#X obj 90 130 prepent 0;
#X obj 160 130 prepent 1;
#X obj 230 130 prepent 2;
#X obj 300 130 prepent 3;
#X obj 370 130 prepent 4;
#X obj 440 130 prepent 5;
#X obj 510 130 prepent 6;
#X obj 580 130 prepent 7;
#X obj 90 110 r \$0-v0-s;
#X obj 160 110 r \$0-v1-s;
#X obj 230 110 r \$0-v2-s;
#X obj 300 110 r \$0-v3-s;
#X obj 370 110 r \$0-v4-s;
#X obj 440 110 r \$0-v5-s;
#X obj 510 110 r \$0-v6-s;
#X obj 580 110 r \$0-v7-s;
#X obj 90 399 tabwrite \$0-t;
#X obj 90 363 unpack f f;
#X msg 90 343 \$2 \$1;
#N canvas 960 0 960 1048 double-click 0;
#X obj 178 41 inlet;
#X obj 138 103 unpack f f;
#X obj 195 125 t f f;
#X obj 201 163 ==;
#X obj 140 159 ==;
#X obj 140 188 &&;
#X obj 205 294 f;
#X obj 138 125 t f f f;
#X obj 232 383 tabread \$0-t;
#X obj 232 405 == 0;
#X obj 232 427 tabwrite \$0-t;
#X obj 238 517 until;
#X msg 238 495 8;
#X obj 238 539 count 8;
#X obj 205 614 tabread \$0-t;
#X obj 205 652 * 3;
#X obj 205 674 + 13;
#X obj 205 570 t f f;
#X obj 205 696 pack f f f \$0;
#X msg 205 718 \; \$4-v\$2-r color \$1 \$3 22;
#X obj 255 674 * 22;
#X obj 255 652 !=;
#X obj 238 451 r \$0-cur;
#X obj 238 473 t b f;
#X obj 232 361 t f f;
#X obj 205 317 t f f;
#X obj 232 339 + 8;
#X obj 205 592 + 8;
#X obj 205 272 sel 1;
#X obj 235 126 timer;
#X obj 235 148 < 300;
#X obj 205 245 &&;
#X obj 178 67 t a b b;
#X connect 0 0 32 0;
#X connect 1 0 7 0;
#X connect 1 1 2 0;
#X connect 2 0 3 1;
#X connect 2 1 3 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 5 0 31 0;
#X connect 6 0 25 0;
#X connect 7 0 4 1;
#X connect 7 1 4 0;
#X connect 7 2 6 1;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 11 0 13 0;
#X connect 12 0 11 0;
#X connect 13 0 17 0;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 16 0 18 0;
#X connect 17 0 27 0;
#X connect 17 1 18 1;
#X connect 17 1 21 0;
#X connect 18 0 19 0;
#X connect 20 0 18 2;
#X connect 21 0 20 0;
#X connect 22 0 23 0;
#X connect 23 0 12 0;
#X connect 23 1 21 1;
#X connect 24 0 8 0;
#X connect 24 1 10 1;
#X connect 25 0 17 0;
#X connect 25 1 26 0;
#X connect 26 0 24 0;
#X connect 27 0 14 0;
#X connect 28 0 6 0;
#X connect 29 0 30 0;
#X connect 30 0 31 1;
#X connect 31 0 28 0;
#X connect 32 0 1 0;
#X connect 32 1 29 0;
#X connect 32 2 29 1;
#X restore 131 323 pd double-click;
#X obj 90 290 t a;
#X connect 0 0 20 0;
#X connect 1 0 20 0;
#X connect 2 0 20 0;
#X connect 3 0 20 0;
#X connect 4 0 20 0;
#X connect 5 0 20 0;
#X connect 6 0 20 0;
#X connect 7 0 20 0;
#X connect 8 0 0 0;
#X connect 9 0 1 0;
#X connect 10 0 2 0;
#X connect 11 0 3 0;
#X connect 12 0 4 0;
#X connect 13 0 5 0;
#X connect 14 0 6 0;
#X connect 15 0 7 0;
#X connect 17 0 16 0;
#X connect 17 1 16 1;
#X connect 18 0 17 0;
#X connect 20 0 19 0;
#X connect 20 0 18 0;
#X restore 382 310 pd receives;
#X obj 177 219 outlet;
#X text 330 125 Set a vsl by sending a "set [number] [value]" message.;
#X text 331 45 vslz - Simple 8-step numeric sequencer.;
#X text 332 68 Outputs the current step on the right outlet \, then the value of that step as an integers n the range of 0-63 on the left outlet;
#X obj 377 270 table \$0-t 16;
#N canvas 0 29 1920 1048 initialize 0;
#X obj 306 212 loadbang;
#X msg 306 232 8;
#X obj 306 252 until;
#X obj 255 336 + 8;
#X obj 255 356 t b f;
#X obj 255 422 tabwrite \$0-t;
#X msg 255 402 1;
#X obj 339 318 t b f;
#X obj 339 358 pack f f \$0;
#X msg 339 378 \; \$3-v\$2-r \$1;
#X obj 339 338 random 64;
#X obj 306 272 f 0;
#X obj 330 272 + 1;
#X obj 354 272 mod 8;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 11 0;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 4 1 5 1;
#X connect 6 0 5 0;
#X connect 7 0 10 0;
#X connect 7 1 8 1;
#X connect 8 0 9 0;
#X connect 10 0 8 0;
#X connect 11 0 12 0;
#X connect 11 0 7 0;
#X connect 11 0 3 0;
#X connect 12 0 13 0;
#X connect 13 0 11 1;
#X restore 377 290 pd initialize;
#N canvas 0 0 1920 1048 step 0;
#X obj 189 113 inlet;
#X obj 189 136 route bang float;
#X obj 230 355 outlet;
#X obj 230 315 tabread \$0-t;
#X obj 230 335 spigot;
#X obj 249 295 tabread \$0-t;
#X obj 249 275 + 8;
#X obj 189 224 count 8;
#X obj 139 294 s \$0-cur;
#X obj 235 157 int;
#X obj 272 355 outlet;
#X obj 230 255 t f f f;
#X obj 235 177 mod 8;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 1 1 9 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 4 1;
#X connect 6 0 5 0;
#X connect 7 0 11 0;
#X connect 9 0 12 0;
#X connect 11 0 3 0;
#X connect 11 0 8 0;
#X connect 11 1 6 0;
#X connect 11 2 10 0;
#X connect 12 0 7 0;
#X restore 135 192 pd step;
#X connect 9 0 10 0;
#X connect 10 0 19 0;
#X connect 10 1 19 0;
#X connect 10 2 11 0;
#X connect 19 0 8 0;
#X connect 19 1 13 0;
#X coords 0 -1 1 1 80 85 1 378 183;
