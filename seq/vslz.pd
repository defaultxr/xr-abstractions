#N canvas 0 29 1920 1048 10;
#X obj 378 199 vsl 10 64 0 63 0 0 \$0-v0-s \$0-v0-r empty 0 -9 0 10 #fc2828 #fcfcfc #000000 0 1;
#X obj 388 199 vsl 10 64 0 63 0 0 \$0-v1-s \$0-v1-r empty 0 -9 0 10 #14e814 #000000 #000000 0 1;
#X obj 398 199 vsl 10 64 0 63 0 0 \$0-v2-s \$0-v2-r empty 0 -9 0 10 #fc2828 #000000 #000000 0 1;
#X obj 408 199 vsl 10 64 0 63 0 0 \$0-v3-s \$0-v3-r empty 0 -9 0 10 #fc2828 #000000 #000000 0 1;
#X obj 418 199 vsl 10 64 0 63 0 0 \$0-v4-s \$0-v4-r empty 0 -9 0 10 #fc2828 #000000 #000000 0 1;
#X obj 428 199 vsl 10 64 0 63 0 0 \$0-v5-s \$0-v5-r empty 0 -9 0 10 #fc2828 #000000 #000000 0 1;
#X obj 438 199 vsl 10 64 0 63 0 0 \$0-v6-s \$0-v6-r empty 0 -9 0 10 #14e814 #000000 #000000 0 1;
#X obj 448 199 vsl 10 64 0 63 0 0 \$0-v7-s \$0-v7-r empty 0 -9 0 10 #14e814 #000000 #000000 0 1;
#X obj 135 219 outlet;
#X obj 135 128 inlet;
#X obj 135 148 route bang float list;
#N canvas 0 29 1920 1048 set 0;
#X obj 231 85 inlet;
#X obj 231 145 pack f f \$0;
#X msg 231 165 \; \$3-v\$1-r set \$2;
#X obj 361 178 tabwrite \$0-t;
#X obj 361 142 unpack f f;
#X msg 361 122 \$2 \$1;
#X connect 0 0 5 0;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 4 0 3 0;
#X connect 4 1 3 1;
#X connect 5 0 4 0;
#X restore 217 192 pd set;
#N canvas 0 1080 1920 1048 receives 0;
#X obj 90 130 prepent 0;
#X obj 160 130 prepent 1;
#X obj 230 130 prepent 2;
#X obj 300 130 prepent 3;
#X obj 370 130 prepent 4;
#X obj 440 130 prepent 5;
#X obj 510 130 prepent 6;
#X obj 580 130 prepent 7;
#X obj 90 110 r \$0-v0-s;
#X obj 160 110 r \$0-v1-s;
#X obj 230 110 r \$0-v2-s;
#X obj 300 110 r \$0-v3-s;
#X obj 370 110 r \$0-v4-s;
#X obj 440 110 r \$0-v5-s;
#X obj 510 110 r \$0-v6-s;
#X obj 580 110 r \$0-v7-s;
#X obj 90 399 tabwrite \$0-t;
#X obj 90 363 unpack f f;
#X msg 90 343 \$2 \$1;
#N canvas 0 29 960 1048 double-click 0;
#X obj 178 41 inlet;
#X obj 178 82 timer;
#X obj 196 163 unpack f f;
#X obj 253 196 t f f;
#X obj 259 234 ==;
#X obj 198 230 ==;
#X obj 223 272 &&;
#X obj 223 291 sel 1;
#X obj 223 310 f;
#X obj 196 196 t f f f;
#X obj 269 377 tabread \$0-t;
#X obj 269 396 == 0;
#X obj 269 415 tabwrite \$0-t;
#X obj 256 506 until;
#X msg 256 487 8;
#X obj 256 525 count 8;
#X obj 223 594 tabread \$0-t;
#X obj 223 632 * 3;
#X obj 223 651 + 13;
#X obj 223 556 t f f;
#X obj 223 670 pack f f f \$0;
#X msg 223 689 \; \$4-v\$2-r color \$1 \$3 22;
#X obj 273 651 * 22;
#X obj 273 632 !=;
#X obj 256 449 r \$0-cur;
#X obj 256 468 t b f;
#X obj 178 120 sel 1;
#X obj 196 144 list;
#X obj 178 60 t b b a;
#X obj 178 101 < 300;
#X obj 269 358 t f f;
#X obj 223 329 t f f;
#X obj 269 339 + 8;
#X obj 223 575 + 8;
#X connect 0 0 28 0;
#X connect 1 0 29 0;
#X connect 2 0 9 0;
#X connect 2 1 3 0;
#X connect 3 0 4 1;
#X connect 3 1 4 0;
#X connect 4 0 6 1;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 31 0;
#X connect 9 0 5 1;
#X connect 9 1 5 0;
#X connect 9 2 8 1;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 13 0 15 0;
#X connect 14 0 13 0;
#X connect 15 0 19 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 20 0;
#X connect 19 0 33 0;
#X connect 19 1 20 1;
#X connect 19 1 23 0;
#X connect 20 0 21 0;
#X connect 22 0 20 2;
#X connect 23 0 22 0;
#X connect 24 0 25 0;
#X connect 25 0 14 0;
#X connect 25 1 23 1;
#X connect 26 0 27 0;
#X connect 27 0 2 0;
#X connect 28 0 1 0;
#X connect 28 1 1 1;
#X connect 28 2 27 1;
#X connect 29 0 26 0;
#X connect 30 0 10 0;
#X connect 30 1 12 1;
#X connect 31 0 19 0;
#X connect 31 1 32 0;
#X connect 32 0 30 0;
#X connect 33 0 16 0;
#X restore 131 323 pd double-click;
#X obj 90 290 t a;
#X connect 0 0 20 0;
#X connect 1 0 20 0;
#X connect 2 0 20 0;
#X connect 3 0 20 0;
#X connect 4 0 20 0;
#X connect 5 0 20 0;
#X connect 6 0 20 0;
#X connect 7 0 20 0;
#X connect 8 0 0 0;
#X connect 9 0 1 0;
#X connect 10 0 2 0;
#X connect 11 0 3 0;
#X connect 12 0 4 0;
#X connect 13 0 5 0;
#X connect 14 0 6 0;
#X connect 15 0 7 0;
#X connect 17 0 16 0;
#X connect 17 1 16 1;
#X connect 18 0 17 0;
#X connect 20 0 19 0;
#X connect 20 0 18 0;
#X restore 382 310 pd receives;
#X obj 177 219 outlet;
#X text 330 125 Set a vsl by sending a "set [number] [value]" message.;
#X text 331 45 vslz - Simple 8-step numeric sequencer.;
#X text 332 68 Outputs the current step on the right outlet \, then the value of that step as an integers n the range of 0-63 on the left outlet;
#X obj 377 270 table \$0-t 16;
#N canvas 0 29 1920 1048 initialize 0;
#X obj 306 212 loadbang;
#X msg 306 232 8;
#X obj 306 252 until;
#X obj 255 336 + 8;
#X obj 255 356 t b f;
#X obj 255 422 tabwrite \$0-t;
#X msg 255 402 1;
#X obj 339 318 t b f;
#X obj 339 358 pack f f \$0;
#X msg 339 378 \; \$3-v\$2-r \$1;
#X obj 339 338 random 64;
#X obj 306 272 f 0;
#X obj 330 272 + 1;
#X obj 354 272 mod 8;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 11 0;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 4 1 5 1;
#X connect 6 0 5 0;
#X connect 7 0 10 0;
#X connect 7 1 8 1;
#X connect 8 0 9 0;
#X connect 10 0 8 0;
#X connect 11 0 12 0;
#X connect 11 0 7 0;
#X connect 11 0 3 0;
#X connect 12 0 13 0;
#X connect 13 0 11 1;
#X restore 377 290 pd initialize;
#N canvas 0 0 1920 1048 step 0;
#X obj 189 113 inlet;
#X obj 189 136 route bang float;
#X obj 230 355 outlet;
#X obj 230 315 tabread \$0-t;
#X obj 230 335 spigot;
#X obj 249 295 tabread \$0-t;
#X obj 249 275 + 8;
#X obj 189 224 count 8;
#X obj 139 294 s \$0-cur;
#X obj 235 157 int;
#X obj 272 355 outlet;
#X obj 230 255 t f f f;
#X obj 235 177 mod 8;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 1 1 9 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 4 1;
#X connect 6 0 5 0;
#X connect 7 0 11 0;
#X connect 9 0 12 0;
#X connect 11 0 3 0;
#X connect 11 0 8 0;
#X connect 11 1 6 0;
#X connect 11 2 10 0;
#X connect 12 0 7 0;
#X restore 135 192 pd step;
#X connect 9 0 10 0;
#X connect 10 0 19 0;
#X connect 10 1 19 0;
#X connect 10 2 11 0;
#X connect 19 0 8 0;
#X connect 19 1 13 0;
#X coords 0 -1 1 1 80 85 1 378 183;
